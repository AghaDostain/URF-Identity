@using Identity.Resources
@model Identity.UI.ViewModels.Account.ExternalLoginConfirmationViewModel

@{
    ViewBag.Title = AccountResources.ExternalLoginConfirmation_Title;
}

<h2>@ViewBag.Title</h2>

<h3>
    @Html.Raw(String.Format(AccountResources.ExternalLoginConfirmation_AssociateAccount, ViewBag.LoginProvider))
</h3>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account",
    new {ReturnUrl = ViewBag.ReturnUrl}, FormMethod.Post,
    new {@class = "form-horizontal", role = "form"}))
{
    @Html.AntiForgeryToken()

    <h4>@AccountResources.ExternalLoginConfirmation_AssociationForm</h4>

    <hr/>

    @Html.ValidationSummary(true, "", new {@class = "text-danger"})

    <p class="text-info">
        @Html.Raw(String.Format(AccountResources.ExternalLoginConfirmation_AuthenticationSuccess, ViewBag.LoginProvider))
    </p>
    <div class="form-group">
        @Html.LabelFor(m => m.Email, new {@class = "col-md-3 control-label"})
        <div class="col-md-9">
            @Html.TextBoxFor(m => m.Email, new {@class = "form-control", autofocus = true})
            @Html.ValidationMessageFor(m => m.Email, "", new {@class = "text-danger"})
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-3 col-md-9">
            <input type="submit" class="btn btn-default" value="@AccountResources.Register"/>
        </div>
    </div>
}